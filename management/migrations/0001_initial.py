# Generated by Django 4.0.3 on 2022-05-04 12:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(blank=True, choices=[('professeur', 'Professeur'), ('vacataire', 'Vacataire')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_promotion', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_semester', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Td',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_td', models.CharField(max_length=5)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.promotion')),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_year', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_week', models.DateField()),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Tp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_tp', models.CharField(max_length=5)),
                ('td', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.td')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_subject', models.CharField(max_length=20)),
                ('number_cm_sessions', models.PositiveIntegerField(default=0)),
                ('number_td_sessions', models.PositiveIntegerField(default=0)),
                ('number_tp_sessions', models.PositiveIntegerField(default=0)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.promotion')),
            ],
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_sessions', models.CharField(blank=True, choices=[('cm', 'Cm'), ('td', 'Td'), ('tp', 'Tp')], max_length=20)),
                ('number_sessions', models.PositiveIntegerField(default=0)),
                ('promotion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promotion', to='management.promotion')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.subject')),
                ('td', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='td', to='management.td')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tp', models.ManyToManyField(blank=True, related_name='tp', to='management.tp')),
                ('week', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.week')),
            ],
        ),
        migrations.AddField(
            model_name='semester',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.year'),
        ),
        migrations.AddField(
            model_name='promotion',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.year'),
        ),
    ]
